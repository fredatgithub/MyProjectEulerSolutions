using System;
using System.Collections.Generic;
using System.Linq;

namespace MyProjectEulerSolutions
{
  class Program
  {
    static void Main(string[] args)
    {
      Action<string> Display = Console.WriteLine;
      Display("Project Euler - problème 1");
      /*
       If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
       Find the sum of all the multiples of 3 or 5 below 1000.
       */
      var multipleDeTrois = new List<int>();
      var multipleDeCinq = new List<int>();
      for (int i = 1; i < (1000 / 3) + 1; i++)
      {
        if (i * 3 < 1000)
        {
          multipleDeTrois.Add(3 * i);
        }
      }

      for (int i = 1; i < (1000 / 5) + 1; i++)
      {
        if (i * 5 < 1000)
        {
          multipleDeCinq.Add(5 * i);
        }
      }

      long somme = 0;
      foreach (var item in multipleDeCinq)
      {
        somme += item;
      }

      foreach (var item in multipleDeTrois)
      {
        somme += item;
      }

      Display($"La somme des multiple de 3 et de 5 inférieur à 1000 est de : {somme}");
      Display("---------------------------------------------------------------------");
      Display("Problème 2");
      /*
       Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
       1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
       By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms
       * */
      int max = 4000000;
      var limit = 10000;
      var outNumber = 1;
      long result = 1;
      int[] list = new int[limit];
      list[0] = 1;
      list[1] = 2;
      for (int i = 2; i < limit; i++)
      {
        var number = list[i-1] + list[i-2];
        if (number < max)
        {
          list[i] = number;
        }
        else
        {
          outNumber = i - 1;
          break;
        }
      }

      int[] list2 = new int[outNumber];
      for (int i = 0; i < outNumber; i++)
      {
        list2[i] = list[i];
      }

      list = null;
      for (int i = 0; i < list2.Length; i = i + 2)
      {
        result += list2[i];
      }

      Display($"The sum of even value lesser than 4 millions is {result}");
      Display("---------------------------------------------------------------------");
      Display("Problème 3");
      /*
       The prime factors of 13195 are 5, 7, 13 and 29.
       What is the largest prime factor of the number 600851475143 ?
      */
      long number3 = 600851475143;
      List<long> list3 = new List<long>();
      list3 = GetDivisors(number3);
      Display($"The largest prime factor of the number 600851475143 is {list3.ToList().Max()}");


      Display("Fin des traitements");
      Console.ReadKey();
    }

    private static List<long> GetDivisors(long number)
    {
      List<long> result = new List<long>();
      for (long i = 3; i < number; i = i + 2)
      {
        if (number % i == 0)
        {
          result.Add(i);
        }
      }

      return result;
    }
  }
}